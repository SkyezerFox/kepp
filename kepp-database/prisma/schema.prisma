generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider = "typegraphql-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// a user known to the bot
model User {
  id          BigInt      @id
  username    String      @db.VarChar(37)
  guilds      Guild[]
  client_user ClientUser?
}

// a user known to the panel
model ClientUser {
  id           BigInt       @unique
  username     String       @db.VarChar(37)
  user         User         @relation(fields: [id], references: [id])
  access_token AccessToken?
}

// a discord access token used for OAuth
model AccessToken {
  id             Int        @id @default(autoincrement())
  client_user_id BigInt
  client_user    ClientUser @relation(fields: [client_user_id], references: [id])
  active         Boolean
  valid_until    DateTime
  // discord jwt
  access_token   String
  // kepp jwt
  content        String
}

// a guild known to the bot
model Guild {
  id        BigInt         @id
  name      String         @db.VarChar(32)
  users     User[]
  settings  GuildSettings?
  is_joined Boolean

}

// collection of settings for a guild the bot has joined
model GuildSettings {
  id     BigInt @unique
  guild  Guild  @relation(fields: [id], references: [id])
  prefix String @db.VarChar(4)

  trello  GuildTrelloIntegration?
  archive ArchiveSettings?
}

///
/// Integration Models
///

model GuildTrelloIntegration {
  id    BigInt        @id
  guild GuildSettings @relation(fields: [id], references: [id])
  key   String
  token String
}

///
/// Archive Module
///
model ArchiveSettings {
  id               BigInt            @unique
  guild            GuildSettings     @relation(fields: [id], references: [id])
  archivedChannels ArchivedChannel[]
  archivedMessages ArchivedMessage[]
  enabled Boolean
}

model ArchivedChannel {
  id       BigInt            @unique
  guild_id BigInt
  settings ArchiveSettings   @relation(fields: [guild_id], references: [id])
  name     String            @db.VarChar(32)
  topic    String            @db.Text
  messages ArchivedMessage[]
}

model ArchivedMessage {
  id         BigInt           @id
  guild_id   BigInt
  settings   ArchiveSettings  @relation(fields: [guild_id], references: [id])
  channel_id BigInt
  channel    ArchivedChannel? @relation(fields: [channel_id], references: [id])
  author_id  BigInt
  content    String
}
